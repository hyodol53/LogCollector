/** Declaration file generated by dts-gen */
declare namespace SvnSpawn {
    
        class Client {
            constructor(options: any);
            cmd(params: string[], callback: Function): any;
    
            getInfo(params: string[], callback: Function): void;
    
            getLog(params: string[], callback: Function): void;
            getDiff(params: string[], callback: Function): void;
            
          /*   getInfo(params: any, callback: InfoData[]): void;
            
                    getLog(params: any, callback: LogData[]): void; */
        }
        
    }
    
    declare interface SVNError {
        readonly code: number;
        readonly output: string;
        readonly message: string;
        readonly stack: string;
    }
    
    declare interface CommonData {
        readonly path: string;
        readonly revision: string;
        readonly kind: string;
        readonly action: string;
    }
    
    declare interface Repository {
        readonly root: string;
        readonly uuid: string;
    }
    
    declare interface Paths {
        readonly path: Path[];
    }
    
    declare interface Path {
        readonly _: string;
        readonly $: CommonData
    }
    
    declare interface LogData {
        readonly $: CommonData;
        readonly author: string;
        readonly date: string;
        readonly msg: string;
        readonly paths: Paths;
    }
    
    declare interface InfoData {
        readonly $: CommonData;
        readonly url: string;
        readonly repository: Repository;
        readonly commit: LogData[];
    }
    
    declare module 'svn-spawn' {
        const Client: typeof SvnSpawn.Client;
        export = Client;
    }
    
    