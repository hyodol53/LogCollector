/** Declaration file generated by dts-gen */
declare module 'unidiff' {
export class Diff {
    constructor();

    castInput(value: any): any;

    diff(oldString: any, newString: any, ...args: any[]): any;

    equals(left: any, right: any): any;

    extractCommon(basePath: any, newString: any, oldString: any, diagonalPath: any): any;

    pushComponent(components: any, added: any, removed: any): void;

    removeEmpty(array: any): any;

    tokenize(value: any): any;

}

export function applyPatch(source: any, uniDiff: any, ...args: any[]): any;

export function applyPatches(uniDiff: any, options: any): any;

export function assertEqual(actual: any, expected: any, okFn: any, label: any, logFn: any): void;

export function canonicalize(obj: any, stack: any, replacementStack: any): any;

export function convertChangesToDMP(changes: any): any;

export function convertChangesToXML(changes: any): any;

export function createPatch(fileName: any, oldStr: any, newStr: any, oldHeader: any, newHeader: any, options: any): any;

export function createTwoFilesPatch(oldFileName: any, newFileName: any, oldStr: any, newStr: any, oldHeader: any, newHeader: any, options: any): any;

export function diffAsText(a: any, b: any, opt: any): any;

export function diffChars(oldStr: any, newStr: any, callback: any): any;

export function diffCss(oldStr: any, newStr: any, callback: any): any;

export function diffJson(oldObj: any, newObj: any, callback: any): any;

export function diffLines(a: any, b: any, cb: any): any;

export function diffSentences(oldStr: any, newStr: any, callback: any): any;

export function diffTrimmedLines(oldStr: any, newStr: any, callback: any): any;

export function diffWords(oldStr: any, newStr: any, callback: any): any;

export function diffWordsWithSpace(oldStr: any, newStr: any, callback: any): any;

export function formatLines(changes: any, opt: any): any;

export function parsePatch(uniDiff: any, ...args: any[]): any;

export function structuredPatch(oldFileName: any, newFileName: any, oldStr: any, newStr: any, oldHeader: any, newHeader: any, options: any): any;

export namespace Diff {
    namespace prototype1 {
        function castInput(value: any): any;

        function diff(oldString: any, newString: any, ...args: any[]): any;

        function equals(left: any, right: any): any;

        function extractCommon(basePath: any, newString: any, oldString: any, diagonalPath: any): any;

        function pushComponent(components: any, added: any, removed: any): void;

        function removeEmpty(array: any): any;

        function tokenize(value: any): any;

        namespace castInput {
            const prototype: {
            };

        }

        namespace diff {
            const prototype: {
            };

        }

        namespace equals {
            const prototype: {
            };

        }

        namespace extractCommon {
            const prototype: {
            };

        }

        namespace pushComponent {
            const prototype: {
            };

        }

        namespace removeEmpty {
            const prototype: {
            };

        }

        namespace tokenize {
            const prototype: {
            };

        }

    }

}

export namespace applyPatch {
    const prototype: {
    };

}

export namespace applyPatches {
    const prototype: {
    };

}

export namespace assertEqual {
    const prototype: {
    };

}

export namespace canonicalize {
    const prototype: {
    };

}

export namespace convertChangesToDMP {
    const prototype: {
    };

}

export namespace convertChangesToXML {
    const prototype: {
    };

}

export namespace createPatch {
    const prototype: {
    };

}

export namespace createTwoFilesPatch {
    const prototype: {
    };

}

export namespace diffAsText {
    const prototype: {
    };

}

export namespace diffChars {
    const prototype: {
    };

}

export namespace diffCss {
    const prototype: {
    };

}

export namespace diffJson {
    const prototype: {
    };

}

export namespace diffLines {
    const prototype: {
    };

}

export namespace diffSentences {
    const prototype: {
    };

}

export namespace diffTrimmedLines {
    const prototype: {
    };

}

export namespace diffWords {
    const prototype: {
    };

}

export namespace diffWordsWithSpace {
    const prototype: {
    };

}

export namespace formatLines {
    const prototype: {
    };

}

export namespace parsePatch {
    const prototype: {
    };

}

export namespace structuredPatch {
    const prototype: {
    };

}

}